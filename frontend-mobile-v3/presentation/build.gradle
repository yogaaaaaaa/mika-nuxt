apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

android {
    signingConfigs {
        release {
            storeFile file('keystore.jks')
            keyAlias = 'mika-keystore'
            keyPassword 'mavenmobile'
            storePassword 'mavenmobile'
        }
    }
    compileSdkVersion 28
    defaultConfig {
        applicationId "id.mikaapp.mika"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        // The following argument makes the Android Test Orchestrator run its
        // "pm clear" command after each test invocation. This command ensures
        // that the app's state is completely cleared between tests.
        testInstrumentationRunnerArguments clearPackageData: 'true'
        buildConfigField("boolean", "SANDBOX_MODE", "false")
    }
    testOptions {
        execution 'ANDROIDX_TEST_ORCHESTRATOR'
    }
    buildTypes {
        release {
            minifyEnabled false
//            debuggable true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        test.java.srcDirs += 'src/test/kotlin'
        androidTest.java.srcDirs += 'src/androidTest/kotlin'
        main {
            jniLibs.srcDirs = ['libs']
        }
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    compileOptions {
        targetCompatibility = '1.8'
    }
}

repositories {
    flatDir {
        dirs 'libs'
    }
}

dependencies {
    def koin_version = '2.0.1'


    def work_version = "2.2.0"

    // WorkManager Kotlin + coroutines
    implementation "androidx.work:work-runtime-ktx:$work_version"

    // WorkManager optional - Test helpers
    androidTestImplementation "androidx.work:work-testing:$work_version"

    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.recyclerview:recyclerview:1.0.0'
    implementation 'com.google.android.material:material:1.0.0'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'

    // Koin for Kotlin
    implementation "org.koin:koin-android:$koin_version"
    implementation "org.koin:koin-android-viewmodel:$koin_version"

    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.0.0'
    implementation 'com.journeyapps:zxing-android-embedded:3.5.0@aar'
    implementation 'com.google.zxing:core:3.3.0'
    implementation 'androidx.multidex:multidex:2.0.1'
    //Paho Mqtt
    implementation 'org.eclipse.paho:org.eclipse.paho.client.mqttv3:1.2.0'
    implementation 'org.eclipse.paho:org.eclipse.paho.android.service:1.1.1'

    //GSON
    implementation 'com.google.code.gson:gson:2.8.5'

    //Signature
    implementation 'com.github.gcacace:signature-pad:1.2.1'
    //Sentry Crashlytics
    implementation 'io.sentry:sentry-android:1.7.16'
//    implementation 'org.slf4j:slf4j-nop:1.7.25'   // Use this to ignore uncaught runtime exceptions
    implementation 'uk.uuid.slf4j:slf4j-android:1.7.26-0'   // Use this to capture uncaught runtime exceptions
    //Sunmi
    implementation files('libs/arity-2.1.7.jar')
    implementation 'com.sunmi:sunmiui:1.1.27'
    implementation(name: 'PayLib-release-1.4.17', ext: 'aar')
    implementation files('libs/sunmiscan.jar')
    //Glide
    implementation('com.github.bumptech.glide:glide:4.9.0') {
        exclude group: "com.android.support"
    }
    implementation 'com.google.android.gms:play-services-location:17.0.0'

    //Leak canary
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.5.4'
    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.4'

    //Toasty
    implementation 'com.github.GrenderG:Toasty:1.4.2'

    // Circular Image View
    implementation 'de.hdodenhof:circleimageview:3.0.0'

    testImplementation rootProject.ext.junit
    testImplementation rootProject.ext.mockito
    // Core library
    androidTestImplementation 'androidx.test:core:1.2.0'
    // AndroidJUnitRunner and JUnit Rules
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test:rules:1.2.0'
    androidTestImplementation rootProject.ext.androidTestRunner
    androidTestImplementation 'org.mockito:mockito-android:2.23.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-intents:3.2.0'
    androidTestImplementation "io.mockk:mockk-android:1.9.kotlin12"
    androidTestUtil 'androidx.test:orchestrator:1.2.0'

    implementation project(':sdk')
}
